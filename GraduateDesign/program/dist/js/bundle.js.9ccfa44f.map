{"version":3,"names":[],"mappings":"","sources":["js/bundle.76129162.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar _weibovis = require('./weibovis.js');\n\nvar _layout = require('./layout.js');\n\nvar _taxiVis = require('./taxiVis.js');\n\nvar _poivis = require('./poivis.js');\n\n//global varible relate to vistap\nvar INITOBJ = {\n    'textmap': 0,\n    'eventmap': 0,\n    'poimap': 0,\n    'taxichart': 0\n};\n\n//weibo-vis dropdown-button initialize\n$(\"#textvis-list\").on(\"click\", function (e) {\n    switch (event.target.id) {\n        case \"weibo-text-vis\":\n            if (INITOBJ.textmap) {\n                cleanMainWindow();\n                INITOBJ.textmap.show();\n            } else {\n                var text_map = new _weibovis.WeiboTextMap(\"weibo-text-map\");\n                INITOBJ.textmap = text_map;\n            }\n            break;\n        case \"weibo-event-vis\":\n            if (INITOBJ.eventmap) {\n                cleanMainWindow();\n                INITOBJ.eventmap.show();\n            } else {\n                var event_map = new _weibovis.Event3DMap(\"weibo-event-map\");\n                INITOBJ.eventmap = event_map;\n            }\n\n            break;\n    }\n});\n\n//spatial-vis dropdown-button initialize\n$(\"#spatialvis-list\").on(\"click\", function (e) {\n    switch (event.target.id) {\n        case \"poi-vis\":\n            if (INITOBJ.poimap) {\n                cleanMainWindow();\n                INITOBJ.poimap.show();\n            } else {\n                var poi_map = new _poivis.PoiVisMap(\"poi-vis-map\");\n                INITOBJ.poimap = poi_map;\n            }\n            break;\n    }\n});\n\n//time-vis dropdown-button initialize\n$(\"#timevis-list\").on(\"click\", function (e) {\n    switch (event.target.id) {\n        case \"trajectory-vis\":\n            if (INITOBJ.taxichart) {\n                cleanMainWindow();\n                INITOBJ.taxichart.show();\n            } else {\n                var taxichart = new _taxiVis.TaxiVisChart(\"trajectory-vis-container\");\n                INITOBJ.taxichart = taxichart;\n            }\n            break;\n    }\n});\n\nfunction cleanMainWindow() {\n    for (var name in INITOBJ) {\n        if (INITOBJ[name]) {\n            INITOBJ[name].hide();\n        }\n    }\n}\n//main window initialize\n(0, _layout.layoutIni)();\n\n},{\"./layout.js\":2,\"./poivis.js\":3,\"./taxiVis.js\":4,\"./weibovis.js\":5}],2:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nfunction layoutIni() {\n\tvar clientHeight = document.body.clientHeight;\n\tvar navHeight = $(\"nav\").height();\n\tvar mainHeight = clientHeight - navHeight - 15;\n\t$(\"#main\").height(mainHeight);\n}\n\nexports.layoutIni = layoutIni;\n\n},{}],3:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PoiVisMap = (function () {\n\tfunction PoiVisMap(domId) {\n\t\t_classCallCheck(this, PoiVisMap);\n\n\t\tthis.domId = domId;\n\t\t$(\"#\" + domId).show();\n\t\tvar map = initMap(domId);\n\t\t$.get(\"http://202.114.123.53/zx/weibo/getWeiboData.php\", { 'city': '武汉' }).then(function (data) {\n\t\t\tdata = JSON.parse(data);\n\t\t\tvar points = [];\n\t\t\tvar heatMapPoint = [];\n\t\t\tfor (var x in data) {\n\t\t\t\tvar item = data[x];\n\t\t\t\tvar lat = item.geo.coordinates[0];\n\t\t\t\tvar lon = item.geo.coordinates[1];\n\t\t\t\tpoints.push([lat, lon]);\n\t\t\t\theatMapPoint.push([lat, lon, 100.0]);\n\t\t\t}\n\t\t\tconsole.log(points.length);\n\t\t\tvar heatMap = createHeatMap(heatMapPoint);\n\t\t\tmap.addLayer(heatMap);\n\n\t\t\tvar cluster = createCluster(points);\n\t\t\tcluster.on('layerremove', function (e) {\n\t\t\t\tconsole.log('heat');\n\t\t\t});\n\n\t\t\tcreateClusterLens(cluster, map, 'zoomlens');\n\n\t\t\tmap.on('zoomend', function (e) {\n\t\t\t\tvar current_level = e.target.getZoom();\n\t\t\t\tconsole.log(current_level);\n\t\t\t\tif (current_level <= 12) {\n\t\t\t\t\tmap.addLayer(heatMap);\n\t\t\t\t\tmap.removeLayer(cluster);\n\t\t\t\t\t$('#zoomlens').hide();\n\t\t\t\t} else if (current_level > 12 && current_level <= 15) {\n\t\t\t\t\tmap.removeLayer(heatMap);\n\t\t\t\t\tmap.addLayer(cluster);\n\t\t\t\t} else if (current_level > 15) {\n\t\t\t\t\tmap.removeLayer(heatMap);\n\t\t\t\t\tmap.removeLayer(cluster);\n\t\t\t\t\t$('#zoomlens').hide();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t_createClass(PoiVisMap, [{\n\t\tkey: \"show\",\n\t\tvalue: function show() {\n\t\t\t$(\"#\" + this.domId).show();\n\t\t}\n\t}, {\n\t\tkey: \"hide\",\n\t\tvalue: function hide() {\n\t\t\t$(\"#\" + this.domId).hide();\n\t\t}\n\t}]);\n\n\treturn PoiVisMap;\n})();\n\nfunction getJSON(url, param) {\n\tvar promise = new Promise(function (resolve, reject) {\n\t\tvar client = new XMLHttpRequest();\n\t\tclient.open(\"GET\", url);\n\t\tclient.onreadystatechange = handler;\n\t\tclient.responseType = \"json\";\n\t\tclient.setRequestHeader(\"Accept\", \"application/json\");\n\t\tclient.send(param);\n\n\t\tfunction handler() {\n\t\t\tif (this.readyState !== 4) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this.status === 200) {\n\t\t\t\tresolve(this.response);\n\t\t\t} else {\n\t\t\t\treject(new Error(this.statusText));\n\t\t\t}\n\t\t};\n\t});\n\treturn promise;\n}\n/**\r\n * initialize the map\r\n * @param  {[String]} domId [id of map's container]\r\n * @return {[Object]}       [map]\r\n */\nfunction initMap(domId) {\n\tL.mapbox.accessToken = 'pk.eyJ1IjoiZG9uZ2xpbmdlIiwiYSI6Ik1VbXI1TkkifQ.7ROsya7Q8kZ-ky9OmhKTvg';\n\tvar map = L.mapbox.map(domId, 'mapbox.light').setView([30.608623, 114.274462], 11);\n\treturn map;\n}\n\n/**\r\n * create ClusterGroup\r\n * @param  {[Array]} data [like [[lat1,lon1],[lat2,lon2],...]  ]\r\n * @return {[Object]}      [MarkerClusterGroup]\r\n */\nfunction createCluster(data) {\n\tvar markers = new L.MarkerClusterGroup({\n\t\tshowCoverageOnHover: false,\n\t\tzoomToBoundsOnClick: false\n\t});\n\tfor (var i = 0, length = data.length; i < length; i++) {\n\t\tvar latlng = new L.LatLng(data[i][0], data[i][1]);\n\t\tvar marker = L.marker(latlng, {\n\t\t\ticon: L.mapbox.marker.icon({ 'marker-symbol': 'post', 'marker-color': '0044FF' })\n\t\t});\n\t\tmarkers.addLayer(marker);\n\t}\n\n\treturn markers;\n}\n\n/**\r\n * 创建cluster的lens\r\n * @param  {Object} cluster  [the cluster Object]\r\n * @param  {Object} map      [map object]\r\n * @param  {String} lendomId [lens's container ]\r\n * @return {null}          [null]\r\n */\nfunction createClusterLens(cluster, map, lendomId) {\n\t//初始化zoommap\n\tvar zoommap = L.mapbox.map('zoommap', 'mapbox.streets', {\n\t\tfadeAnimation: false,\n\t\tzoomControl: false,\n\t\tattributionControl: false\n\t});\n\n\tvar oldLayer = [];\n\tvar zl = document.getElementById(lendomId);\n\tcluster.on('clustermouseover', function (e) {\n\n\t\tvar point = map.latLngToContainerPoint(e.latlng);\n\t\t$(zl).show();\n\t\t//获取当前的markers\n\t\tvar clickMarkers = e.layer.getAllChildMarkers();\n\n\t\t//移除lens中的marker\n\t\tfor (var m in oldLayer) {\n\t\t\tvar old_marker = oldLayer[m];\n\t\t\tzoommap.removeLayer(old_marker);\n\t\t}\n\t\toldLayer = [];\n\t\t//把当前的marker加入lens、oldLayer以备删除\n\t\tfor (var i in clickMarkers) {\n\t\t\tvar marker = clickMarkers[i];\n\t\t\tvar latlng = marker._latlng;\n\t\t\tvar zoomMarker = L.marker(latlng, {\n\t\t\t\ticon: L.mapbox.marker.icon({ 'marker-symbol': 'post', 'marker-color': '0044FF' })\n\t\t\t});\n\t\t\tzoomMarker.addTo(zoommap);\n\t\t\toldLayer.push(zoomMarker);\n\t\t}\n\t\t//移动lens\n\t\tzl.style.top = point.y - 100 + 'px';\n\t\tzl.style.left = point.x - 100 + 'px';\n\t\t//设置zoommap的显示区域\n\t\tzoommap.setView(e.latlng, map.getZoom() + 1, true);\n\t});\n\n\tcluster.on('clusterlayerremove', function (e) {\n\t\tconsole.log(e);\n\t});\n\t// var originRemove = cluster.onRemove;\n\t// cluster.onRemove=function(){\n\t// \toriginRemove();\n\t// \tconsole.log('3');\n\t// }\n}\n/**\r\n * create HeatMap\r\n * @param  {Array} data [like [[lat,lon,value],[lat,lon,value],...] ]\r\n * @return {[Object]}      [heatLayer]\r\n */\nfunction createHeatMap(data) {\n\tvar gradient = {\n\t\t0.5: '#c7f127',\n\t\t0.55: '#daf127',\n\t\t0.6: '#f3f73b',\n\t\t0.7: '#FBEF0E',\n\t\t0.8: '#FFD700',\n\t\t0.98: '#f48e1a',\n\t\t1: 'red'\n\t};\n\tvar heat = L.heatLayer(data, { radius: 15, gradient: gradient });\n\treturn heat;\n}\n\nexports.PoiVisMap = PoiVisMap;\n\n},{}],4:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar getCharts = (function () {\n\tvar ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(domId) {\n\t\tvar container, rowdiv, passChartDom, flowChartDom, wuhan_map, wuhan_od, result_data, flowChart, passChart;\n\t\treturn regeneratorRuntime.wrap(function _callee$(_context) {\n\t\t\twhile (1) {\n\t\t\t\tswitch (_context.prev = _context.next) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tcontainer = document.getElementById(domId);\n\t\t\t\t\t\trowdiv = document.createElement(\"div\");\n\n\t\t\t\t\t\trowdiv.className = 'row';\n\t\t\t\t\t\t//Initialize\n\t\t\t\t\t\tpassChartDom = document.createElement('div');\n\n\t\t\t\t\t\tpassChartDom.style.width = '500px';\n\t\t\t\t\t\tpassChartDom.style.height = '600px';\n\t\t\t\t\t\tpassChartDom.id = 'taxi-pass-chart';\n\t\t\t\t\t\tpassChartDom.className = 'col s4';\n\t\t\t\t\t\trowdiv.appendChild(passChartDom);\n\n\t\t\t\t\t\tflowChartDom = document.createElement('div');\n\n\t\t\t\t\t\tflowChartDom.style.width = '500px';\n\t\t\t\t\t\tflowChartDom.style.height = '600px';\n\t\t\t\t\t\tflowChartDom.id = 'taxi-flow-chart';\n\t\t\t\t\t\tflowChartDom.className = 'col s4';\n\t\t\t\t\t\trowdiv.appendChild(flowChartDom);\n\t\t\t\t\t\tcontainer.appendChild(rowdiv);\n\n\t\t\t\t\t\t//get geojson of wuhan\n\t\t\t\t\t\t_context.next = 18;\n\t\t\t\t\t\treturn getGeojson(\"武汉市\");\n\n\t\t\t\t\tcase 18:\n\t\t\t\t\t\twuhan_map = _context.sent;\n\n\t\t\t\t\t\tconsole.log(wuhan_map);\n\n\t\t\t\t\t\techarts.registerMap('wuhan', wuhan_map);\n\t\t\t\t\t\t//get od-data of wuhan\n\t\t\t\t\t\t_context.next = 23;\n\t\t\t\t\t\treturn getODData();\n\n\t\t\t\t\tcase 23:\n\t\t\t\t\t\twuhan_od = _context.sent;\n\n\t\t\t\t\t\tconsole.log(wuhan_od);\n\t\t\t\t\t\tresult_data = processODData(wuhan_od);\n\n\t\t\t\t\t\t//get Flowchart\n\n\t\t\t\t\t\tflowChart = taxiFlowChart(flowChartDom, result_data['limes'], result_data['points']);\n\n\t\t\t\t\t\t//get PassOutChart\n\n\t\t\t\t\t\tpassChart = taxiPassOutChart(passChartDom, result_data['in'], result_data['out'], flowChart);\n\n\t\t\t\t\tcase 28:\n\t\t\t\t\tcase \"end\":\n\t\t\t\t\t\treturn _context.stop();\n\t\t\t\t}\n\t\t\t}\n\t\t}, _callee, this);\n\t}));\n\n\treturn function getCharts(_x) {\n\t\treturn ref.apply(this, arguments);\n\t};\n})();\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar TaxiVisChart = (function () {\n\tfunction TaxiVisChart(domId) {\n\t\t_classCallCheck(this, TaxiVisChart);\n\n\t\tthis.domId = domId;\n\t\t$(\"#\" + domId).show();\n\t\tgetCharts(domId);\n\t}\n\n\t_createClass(TaxiVisChart, [{\n\t\tkey: \"show\",\n\t\tvalue: function show() {\n\t\t\t$(\"#\" + this.domId).show();\n\t\t}\n\t}, {\n\t\tkey: \"hide\",\n\t\tvalue: function hide() {\n\t\t\t$(\"#\" + this.domId).hide();\n\t\t}\n\t}]);\n\n\treturn TaxiVisChart;\n})();\n\nfunction getJSON(url) {\n\tvar promise = new Promise(function (resolve, reject) {\n\t\tvar client = new XMLHttpRequest();\n\t\tclient.open(\"GET\", url);\n\t\tclient.onreadystatechange = handler;\n\t\tclient.responseType = \"json\";\n\t\tclient.setRequestHeader(\"Accept\", \"application/json\");\n\t\tclient.send();\n\n\t\tfunction handler() {\n\t\t\tif (this.readyState !== 4) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this.status === 200) {\n\t\t\t\tresolve(this.response);\n\t\t\t} else {\n\t\t\t\treject(new Error(this.statusText));\n\t\t\t}\n\t\t};\n\t});\n\treturn promise;\n}\n\nfunction getGeojson(city) {\n\treturn getJSON(\"http://202.114.123.53/zx/taxi/getGeojson.php?city=\" + city);\n}\n\nfunction getODData() {\n\treturn getJSON(\"http://202.114.123.53/zx/taxi/getAllOdDataM.php\");\n\t// .then(data => {\n\t// \tvar taxi_data = data;\n\n\t// \tvar draw_data = {};\n\n\t// \t//calculate in/out between two district\n\t// \tfor(let i = 0,length = taxi_data.length;i<length;i++){\n\t// \t\tvar start_point = taxi_data[i];\n\n\t// \t\tif(start_point.state !== 0){\n\t// \t\t\tcontinue;\n\t// \t\t}\n\n\t// \t\tif(i >= length-1){\n\t// \t\t\tbreak;\n\t// \t\t}\n\t// \t\tvar end_point = taxi_data[i+1];\n\t// \t\tif(start_point.district === ''||end_point.district === ''){\n\t// \t\t\tcontinue;\n\t// \t\t}\n\t// \t\tif(draw_data[start_point.district]){\n\t// \t\t\tif(draw_data[start_point.district][end_point.district]){\n\t// \t\t\t\tdraw_data[start_point.district][end_point.district] += 1;\n\t// \t\t\t}else{\n\t// \t\t\t\tdraw_data[start_point.district][end_point.district] = 1;\n\t// \t\t\t}\n\t// \t\t}else{\n\t// \t\t\tdraw_data[start_point.district] = {};\n\t// \t\t\tdraw_data[start_point.district][end_point.district] = 1;\n\t// \t\t}\n\n\t// \t\ti++;\t\n\t// \t}\n\t// });\n}\n\nfunction processODData(data) {\n\tvar taxi_data = data;\n\n\tvar draw_data = {};\n\n\t//calculate in/out between two district\n\tfor (var i = 0, length = taxi_data.length; i < length; i++) {\n\t\tvar start_point = taxi_data[i];\n\n\t\tif (start_point.state !== 0) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (i >= length - 1) {\n\t\t\tbreak;\n\t\t}\n\t\tvar end_point = taxi_data[i + 1];\n\t\tif (start_point.district === '' || end_point.district === '') {\n\t\t\tcontinue;\n\t\t}\n\t\tif (draw_data[start_point.district]) {\n\t\t\tif (draw_data[start_point.district][end_point.district]) {\n\t\t\t\tdraw_data[start_point.district][end_point.district] += 1;\n\t\t\t} else {\n\t\t\t\tdraw_data[start_point.district][end_point.district] = 1;\n\t\t\t}\n\t\t} else {\n\t\t\tdraw_data[start_point.district] = {};\n\t\t\tdraw_data[start_point.district][end_point.district] = 1;\n\t\t}\n\n\t\ti++;\n\t}\n\tdata = draw_data;\n\tvar districtLonLat = {\n\t\t\"江汉区\": [114.274462, 30.608623],\n\t\t\"武昌区\": [114.320455, 30.56087],\n\t\t\"青山区\": [114.39275, 30.630875],\n\t\t\"江岸区\": [114.311256, 30.606385],\n\t\t\"洪山区\": [114.349919, 30.506497],\n\t\t\"汉阳区\": [114.221569, 30.56286],\n\t\t\"东西湖区\": [114.140794, 30.627519],\n\t\t\"硚口区\": [114.219557, 30.58848],\n\t\t\"蔡甸区\": [114.03271, 30.589226],\n\t\t\"黄陂区\": [114.375934, 30.889686],\n\t\t\"江夏区\": [114.329941, 30.381085],\n\t\t\"新洲区\": [114.807983, 30.848025],\n\t\t\"汉南区\": [114.193972, 30.479202]\n\t};\n\tfunction getDistrictIn(district) {\n\t\tvar value = 0;\n\t\tfor (var name in data) {\n\t\t\tif (name != district) {\n\t\t\t\tfor (var inname in data[name]) {\n\t\t\t\t\tif (inname === district) {\n\t\t\t\t\t\tvalue += data[name][district];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t}\n\n\tvar temp_markline_data = {};\n\tvar temp_point_data = {};\n\tvar taxi_region_in = []; //各区域车辆流入数量\n\tvar taxi_region_out = []; //各区域车辆流出数量\n\tfor (var name in data) {\n\t\tvar temp_lime = [];\n\t\tvar temp_point = [];\n\t\tvar item = data[name];\n\n\t\tvar out_num = 0;\n\n\t\tfor (var name2 in item) {\n\t\t\tif (name2 != name) {\n\t\t\t\tout_num += item[name2];\n\t\t\t\ttemp_lime.push([{ name: name, coord: districtLonLat[name], value: item[name2] }, { name: name2, coord: districtLonLat[name2], value: item[name2] }]);\n\t\t\t\ttemp_point.push({ name: name2, value: districtLonLat[name2].concat([item[name2]]) });\n\t\t\t}\n\t\t}\n\n\t\ttemp_markline_data[name] = temp_lime;\n\t\ttemp_point_data[name] = temp_point;\n\n\t\tvar in_num = getDistrictIn(name);\n\t\ttaxi_region_in.push(in_num);\n\n\t\ttaxi_region_out.push(out_num);\n\t}\n\treturn {\n\t\t\"limes\": temp_markline_data,\n\t\t'points': temp_point_data,\n\t\t'in': taxi_region_in,\n\t\t'out': taxi_region_out\n\t};\n}\n\nfunction taxiFlowChart(dom, linesData, pointsData) {\n\n\tvar option = {\n\t\tbackgroundColor: '#404a59',\n\t\ttitle: {\n\t\t\ttext: '武汉各区之间出租车流动图',\n\t\t\tsubtext: '',\n\t\t\tleft: 'center',\n\t\t\ttextStyle: {\n\t\t\t\tcolor: '#fff'\n\t\t\t}\n\t\t},\n\t\ttooltip: {\n\t\t\ttrigger: 'item',\n\t\t\tformatter: function formatter(v) {\n\t\t\t\treturn v.data[0].name + \" > \" + v.data[1].name;\n\t\t\t}\n\t\t},\n\t\tlegend: {\n\t\t\torient: 'vertical',\n\t\t\ttop: 'bottom',\n\t\t\tleft: 'right',\n\t\t\tdata: ['洪山区'],\n\t\t\ttextStyle: {\n\t\t\t\tcolor: '#fff'\n\t\t\t},\n\t\t\tselectedMode: 'single'\n\t\t},\n\t\tbmap: {\n\t\t\tcenter: [114.274462, 30.608623],\n\t\t\tzoom: 11,\n\t\t\troam: true,\n\t\t\tmapStyle: {\n\t\t\t\tstyleJson: [{\n\t\t\t\t\t\"featureType\": \"water\",\n\t\t\t\t\t\"elementType\": \"all\",\n\t\t\t\t\t\"stylers\": {\n\t\t\t\t\t\t\"color\": \"#134f5c\"\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\t\"featureType\": \"land\",\n\t\t\t\t\t\"elementType\": \"all\",\n\t\t\t\t\t\"stylers\": {\n\t\t\t\t\t\t\"color\": \"#444444\"\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\t\"featureType\": \"boundary\",\n\t\t\t\t\t\"elementType\": \"geometry\",\n\t\t\t\t\t\"stylers\": {\n\t\t\t\t\t\t\"color\": \"#064f85\"\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\t\"featureType\": \"railway\",\n\t\t\t\t\t\"elementType\": \"all\",\n\t\t\t\t\t\"stylers\": {\n\t\t\t\t\t\t\"visibility\": \"off\"\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\t\"featureType\": \"highway\",\n\t\t\t\t\t\"elementType\": \"geometry\",\n\t\t\t\t\t\"stylers\": {\n\t\t\t\t\t\t\"color\": \"#3d85c6\",\n\t\t\t\t\t\t\"lightness\": -53\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\t\"featureType\": \"highway\",\n\t\t\t\t\t\"elementType\": \"geometry.fill\",\n\t\t\t\t\t\"stylers\": {\n\t\t\t\t\t\t\"color\": \"#76a5af\"\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\t\"featureType\": \"highway\",\n\t\t\t\t\t\"elementType\": \"labels\",\n\t\t\t\t\t\"stylers\": {\n\t\t\t\t\t\t\"visibility\": \"off\"\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\t\"featureType\": \"arterial\",\n\t\t\t\t\t\"elementType\": \"geometry\",\n\t\t\t\t\t\"stylers\": {\n\t\t\t\t\t\t\"color\": \"#33707d\"\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\t\"featureType\": \"arterial\",\n\t\t\t\t\t\"elementType\": \"geometry.fill\",\n\t\t\t\t\t\"stylers\": {\n\t\t\t\t\t\t\"color\": \"#45818e\",\n\t\t\t\t\t\t\"lightness\": -56\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\t\"featureType\": \"poi\",\n\t\t\t\t\t\"elementType\": \"all\",\n\t\t\t\t\t\"stylers\": {\n\t\t\t\t\t\t\"visibility\": \"off\"\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\t\"featureType\": \"green\",\n\t\t\t\t\t\"elementType\": \"all\",\n\t\t\t\t\t\"stylers\": {\n\t\t\t\t\t\t\"color\": \"#056197\",\n\t\t\t\t\t\t\"visibility\": \"off\"\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\t\"featureType\": \"subway\",\n\t\t\t\t\t\"elementType\": \"all\",\n\t\t\t\t\t\"stylers\": {\n\t\t\t\t\t\t\"visibility\": \"off\"\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\t\"featureType\": \"manmade\",\n\t\t\t\t\t\"elementType\": \"all\",\n\t\t\t\t\t\"stylers\": {\n\t\t\t\t\t\t\"visibility\": \"off\"\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\t\"featureType\": \"local\",\n\t\t\t\t\t\"elementType\": \"all\",\n\t\t\t\t\t\"stylers\": {\n\t\t\t\t\t\t\"visibility\": \"off\"\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\t\"featureType\": \"arterial\",\n\t\t\t\t\t\"elementType\": \"labels\",\n\t\t\t\t\t\"stylers\": {\n\t\t\t\t\t\t\"visibility\": \"off\"\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\t\"featureType\": \"boundary\",\n\t\t\t\t\t\"elementType\": \"geometry.fill\",\n\t\t\t\t\t\"stylers\": {\n\t\t\t\t\t\t\"color\": \"#029fd4\"\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\t\"featureType\": \"building\",\n\t\t\t\t\t\"elementType\": \"all\",\n\t\t\t\t\t\"stylers\": {\n\t\t\t\t\t\t\"color\": \"#1a5787\"\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\t\"featureType\": \"label\",\n\t\t\t\t\t\"elementType\": \"all\",\n\t\t\t\t\t\"stylers\": {\n\t\t\t\t\t\t\"visibility\": \"off\"\n\t\t\t\t\t}\n\t\t\t\t}]\n\t\t\t}\n\t\t},\n\t\tvisualMap: [{\n\t\t\ttype: 'continuous',\n\t\t\tmin: 0,\n\t\t\tmax: 50,\n\t\t\ttext: ['High', 'Low'],\n\t\t\trealtime: true,\n\t\t\tcalculable: true,\n\t\t\tcolor: ['orangered', 'yellow', 'lightskyblue']\n\t\t}],\n\t\tseries: []\n\t};\n\tvar series = [];\n\tfor (var name in linesData) {\n\t\toption.legend.data.push(name);\n\t\tvar temp_markline_data = linesData[name];\n\t\tvar temp_point_data = pointsData[name];\n\t\tseries.push({\n\t\t\tname: name,\n\t\t\ttype: 'lines',\n\t\t\tcoordinateSystem: 'bmap',\n\t\t\teffect: {\n\t\t\t\tshow: true,\n\t\t\t\tperiod: 6,\n\t\t\t\ttrailLength: 0,\n\t\t\t\tsymbol: 'arrow',\n\t\t\t\tsymbolSize: 15\n\t\t\t},\n\t\t\tlineStyle: {\n\t\t\t\tnormal: {\n\t\t\t\t\twidth: 1,\n\t\t\t\t\topacity: 0.4,\n\t\t\t\t\tcurveness: 0.2\n\t\t\t\t}\n\t\t\t},\n\t\t\tdata: temp_markline_data\n\t\t}, {\n\t\t\tname: name,\n\t\t\ttype: 'lines',\n\t\t\tcoordinateSystem: 'bmap',\n\t\t\tzlevel: 1,\n\t\t\teffect: {\n\t\t\t\tshow: true,\n\t\t\t\tperiod: 6,\n\t\t\t\ttrailLength: 0.7,\n\t\t\t\tcolor: '#fff',\n\t\t\t\tsymbolSize: 3\n\t\t\t},\n\t\t\tlineStyle: {\n\t\t\t\tnormal: {\n\t\t\t\t\twidth: 1,\n\t\t\t\t\tcurveness: 0.2\n\t\t\t\t}\n\t\t\t},\n\t\t\tdata: temp_markline_data\n\t\t}, {\n\t\t\tname: name,\n\t\t\ttype: 'effectScatter',\n\t\t\tcoordinateSystem: 'bmap',\n\t\t\tzlevel: 2,\n\t\t\trippleEffect: {\n\t\t\t\tbrushType: 'stroke'\n\t\t\t},\n\t\t\tlabel: {\n\t\t\t\tnormal: {\n\t\t\t\t\tshow: true,\n\t\t\t\t\tposition: 'right',\n\t\t\t\t\tformatter: '{b}'\n\t\t\t\t}\n\t\t\t},\n\t\t\tsymbolSize: function symbolSize(val) {\n\t\t\t\tvar size = Math.log(val[2]) * 3;\n\t\t\t\treturn size;\n\t\t\t},\n\t\t\titemStyle: {\n\t\t\t\tnormal: {\n\t\t\t\t\tcolor: '#a6c84c'\n\t\t\t\t}\n\t\t\t},\n\t\t\tdata: temp_point_data\n\t\t});\n\t}\n\tvar flowChart = echarts.init(dom);\n\toption.series = series;\n\tflowChart.setOption(option);\n\tconsole.log(option);\n\treturn flowChart;\n}\n\nfunction taxiPassOutChart(dom, inData, outData, flowChart) {\n\tvar option = {\n\t\ttitle: {\n\t\t\ttext: '武汉各区出租车流入流出',\n\t\t\tsubtext: '',\n\t\t\tleft: 'left',\n\t\t\tbottom: '15%',\n\t\t\ttextStyle: {\n\t\t\t\tcolor: '#070716'\n\t\t\t}\n\t\t},\n\t\ttooltip: {\n\t\t\ttrigger: 'axis',\n\t\t\taxisPointer: { // 坐标轴指示器，坐标轴触发有效\n\t\t\t\ttype: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n\t\t\t}\n\t\t},\n\t\tlegend: {\n\t\t\tleft: 'right',\n\t\t\tdata: ['流入', '流出']\n\t\t},\n\t\tgrid: {\n\t\t\tleft: '3%',\n\t\t\tright: '4%',\n\t\t\tbottom: '3%',\n\t\t\tcontainLabel: true\n\t\t},\n\t\txAxis: [{\n\t\t\ttype: 'category',\n\t\t\tdata: []\n\t\t}],\n\t\tyAxis: [{\n\t\t\ttype: 'value'\n\t\t}],\n\t\tseries: []\n\t};\n\toption.series.push({\n\t\tname: '流入',\n\t\ttype: 'bar',\n\t\tstack: '流动',\n\t\tdata: inData\n\t}, {\n\t\tname: '流出',\n\t\ttype: 'bar',\n\t\tstack: '流动',\n\t\tdata: outData\n\t});\n\tvar flowOption = flowChart.getOption();\n\toption.xAxis[0].data = flowChart.getOption().legend[0].data;\n\n\tvar barChart = echarts.init(dom);\n\tbarChart.setOption(option);\n\tbarChart.on(\"click\", function (e) {\n\t\tflowChart.dispatchAction({\n\t\t\t'type': 'legendSelect',\n\t\t\t'name': e.name\n\t\t});\n\t});\n}\n// var districtLonLat = {\n// \t\"海淀区\":[116.299059,39.966493],\n// \t\"朝阳区\":[116.479583,39.963396],\n// \t\"东城区\":[116.419217,39.937289],\n// \t\"丰台区\":[116.29101,39.86511],\n// \t\"通州区\":[116.661831,39.917813],\n// \t\"石景山区\":[116.22317,39.9125],\n// \t\"门头沟区\":[116.107037,39.948353],\n// \t\"西城区\":[116.369199,39.918698],\n// \t\"房山区\":[116.147856,39.754701],\n// \t\"大兴区\":[116.147856,39.754701],\n// \t\"昌平区\":[116.237831,40.227662],\n// \t\"顺义区\":[116.659819,40.136379],\n// \t\"怀柔区\":[116.637972,40.322782]\n// };\n\nexports.TaxiVisChart = TaxiVisChart;\n\n},{}],5:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar WeiboTextMap = (function () {\n    function WeiboTextMap(domId) {\n        _classCallCheck(this, WeiboTextMap);\n\n        this.domId = domId;\n        $(\"#\" + domId).show();\n        var map = initMap(domId);\n        $.get(\"data/idf.txt\", function (data) {\n            var split_array = data.split(\"\\n\");\n            var idfArray = [];\n            for (var i = 0; i < split_array.length; i++) {\n                var item = split_array[i].split(\" \");\n                idfArray[item[0]] = parseInt(item[1]);\n            }\n            getWeiboData(\"北京\", map, idfArray);\n        });\n    }\n\n    _createClass(WeiboTextMap, [{\n        key: \"show\",\n        value: function show() {\n            $(\"#\" + this.domId).show();\n        }\n    }, {\n        key: \"hide\",\n        value: function hide() {\n            $(\"#\" + this.domId).hide();\n        }\n    }]);\n\n    return WeiboTextMap;\n})();\n\n/**\r\n * map initialize\r\n * @param  {[string]} domId [map container dom id]\r\n * @return {[obj]}       [map object]\r\n */\n\nfunction initMap(domId) {\n    L.mapbox.accessToken = 'pk.eyJ1IjoiZG9uZ2xpbmdlIiwiYSI6Ik1VbXI1TkkifQ.7ROsya7Q8kZ-ky9OmhKTvg';\n    var layer = L.mapbox.tileLayer('mapbox.streets');\n    var layer_satelite = L.mapbox.tileLayer('mapbox.streets-satellite');\n    var map = L.mapbox.map(domId).setView([30.608623, 114.274462], 11).addLayer(layer);\n\n    return map;\n}\n\nvar Event3DMap = (function () {\n    function Event3DMap(domId) {\n        _classCallCheck(this, Event3DMap);\n\n        this.domId = domId;\n        $(\"#\" + domId).show();\n        var container = document.getElementById(domId);\n        var globe = new DAT.Globe(container);\n        $.get(\"http://202.114.123.53/zx/aqi/getAQICityList.php\").then(function (data) {\n            data = JSON.parse(data);\n            var mapdata = [];\n            mapdata['1990'] = [];\n            for (var i in data) {\n                var city = data[i];\n                mapdata['1990'].push(city.lat);\n                mapdata['1990'].push(city.lon);\n                mapdata['1990'].push(Math.random() - 0.6);\n            }\n            globe.addData(mapdata['1990'], { format: 'magnitude', name: '1990' });\n            // Create the geometry\n            globe.createPoints();\n            // Begin animation\n            globe.animate();\n        });\n    }\n\n    _createClass(Event3DMap, [{\n        key: \"hide\",\n        value: function hide() {\n            $(\"#\" + this.domId).hide();\n        }\n    }, {\n        key: \"show\",\n        value: function show() {\n            $(\"#\" + this.domId).show();\n        }\n    }]);\n\n    return Event3DMap;\n})();\n\n/**\r\n * 获取微博数据\r\n * @param  {[string]} city     [城市名]\r\n * @param  {[obj]} map      [地图对象]\r\n * @param  {[string]} idfArray [idf的数组]\r\n * @return {[null]}          [无]\r\n */\n\nfunction getWeiboData(city, map, idfArray) {\n    $.get('http://202.114.123.53/zx/weibo/getWeiboData.php', { 'city': '武汉' }).then(function (data) {\n        handleWeiboData(event.target.responseText, map, idfArray);\n    });\n}\n\n/**\r\n * 获取微博数据 回调函数\r\n * @param  {[Array]} data     [微博数据:[{text:..,geo:..},{}]]\r\n * @param  {[Object]} map      [leaflet地图对象]\r\n * @param  {[Array]} idfArray [idf数据]\r\n * @return {[null]}          [null]\r\n */\nfunction handleWeiboData(data, map, idfArray) {\n    data = JSON.parse(data);\n    var markers = new L.MarkerClusterGroup({\n        showCoverageOnHover: false,\n        zoomToBoundsOnClick: false,\n        iconCreateFunction: function iconCreateFunction(cluster) {\n            var markers = cluster.getAllChildMarkers();\n            var allText = '';\n            for (var i = 0, length = markers.length; i < length; i++) {\n                allText += markers[i].options.title;\n            }\n            var innerTag = wordseg(allText, idfArray);\n            var c = ' marker-cluster-';\n            if (length < 10) {\n                c += 'small';\n            } else if (length < 100) {\n                c += 'medium';\n            } else {\n                c += 'large';\n            }\n            var iconRadius = Math.log(length) * 7 + 30;\n            var innerDivWidth = iconRadius * 0.8;\n            var innerDivMargin = iconRadius * 0.1;\n            var divString = \"<div style='width:\" + innerDivWidth + \"px;height:\" + innerDivWidth + \"px;margin-top:\" + innerDivMargin + \"px;margin-left:\" + innerDivMargin + \"px;'>\";\n            divString += \"<span style='line-height:\" + innerDivWidth + \"px;'>\" + innerTag + \"</span></div>\";\n            var divOption = {\n                html: divString,\n                className: 'marker-cluster' + c,\n                iconSize: new L.Point(iconRadius, iconRadius)\n            };\n            return new L.DivIcon(divOption);\n        }\n    });\n\n    //add marker to markers\n    for (var x in data) {\n        var item = data[x];\n        var lat = item.geo.coordinates[0];\n        var lon = item.geo.coordinates[1];\n        var re = /\\[.*\\]/g;\n\n        var text = item.text.replace(re, \"\");\n        var http_index = text.indexOf(\"http://\");\n        if (http_index != -1) {\n            text = text.substr(0, http_index);\n        }\n        text = text.replace(\"分享图片\", \"\");\n        var latlng = new L.LatLng(lat, lon);\n        var marker = L.marker(latlng, {\n            icon: L.mapbox.marker.icon({ 'marker-symbol': 'post', 'marker-color': '0044FF' }),\n            title: text\n        });\n        markers.addLayer(marker);\n    }\n    //绑定tooltip\n    markers.on(\"clustermouseover\", showWeiboDetail);\n    //markers.on(\"clustermouseout\",hideWeiboDetail)\n    map.addLayer(markers);\n    map.on(\"mouseover\", function (e) {\n        $(\"#tooltip\").hide();\n    });\n    map.on(\"mouseout\", function (e) {\n        $(\"#tooltip\").hide();\n    });\n}\n\nfunction showWeiboDetail(e) {\n\n    var tooltip = $(\"#tooltip\");\n    var tooltip_content = $(\"#tooltip-content\");\n    var centerText = e.layer._icon.textContent;\n    var map_container = e.target._map._container;\n    var point = e.target._map.latLngToContainerPoint(e.latlng);\n\n    //获取当前的markers\n    var currentMarkers = e.layer.getAllChildMarkers();\n\n    tooltip.css(\"left\", point.x + map_container.offsetLeft);\n    tooltip_content.css(\"width\", '200px');\n    tooltip.css(\"width\", '205px');\n\n    //如果point在下方，为避免出现tips超出主图区域，故让tips左下角定位在center\n    if (map_container.clientHeight - point.y <= 250) {\n        tooltip.css(\"top\", point.y - 250);\n    } else {\n        tooltip.css(\"top\", point.y);\n    }\n\n    tooltip_content.empty();\n\n    var related_weibo_num = 0;\n    tooltip.show();\n    var centerReg = new RegExp(centerText, 'g');\n    //填充内容并高亮关键字\n    for (var i = 0, length = currentMarkers.length; i < length; i++) {\n        var marker = currentMarkers[i];\n        var text = marker.options.title;\n        var center_index = text.indexOf(centerText);\n        if (center_index != -1) {\n            related_weibo_num++;\n            text = text.replace(centerReg, \"<span class='weibo-center-text'>\" + centerText + \"</span>\");\n            tooltip_content.append(\"<div class='weibo-text-item'>\" + text + \"</div>\");\n        }\n    }\n    var text_item = $('.weibo-text-item:last-child');\n    //如果内容高度超出范围，设定具体高度出现overflow，否则tips的高度就是内容的实际高度\n    if (text_item[0].offsetTop > 190) {\n        tooltip.css(\"height\", '245px');\n        tooltip_content.css(\"height\", '200px');\n    } else {\n        tooltip.css(\"height\", '');\n        tooltip_content.css(\"height\", '');\n    }\n\n    $(\"#tooltip-header\").html(\"共\" + related_weibo_num + \"条相关微博\");\n}\nfunction hideWeiboDetail(e) {\n    console.log(\"hide\");\n    $(\"#tooltip\").hide();\n}\n\nvar wordsAndValue = [];\nvar wordsOnly = [];\nvar valueOnly = [];\n\n//实现分词并统计个数\nfunction wordseg(allText, idfArray) {\n\n    //loaddic();\n    var list = [];\n    var list1 = [];\n    var list2 = [];\n    var text = allText;\n    var stopWords = ['的', '是', '我', ',', '自己', '哈哈', '今天', '北京', '啊', '你', '也', '为', '每', '人', '着', '个', '说', '们', '在', '再', '它', '若', '没', '有', '想', '她', '都', '不', '分', '享', '客', '户', '一', '那', '这', '呀', '吧', '些', '很', '啦', '了', '吗', '得', '怎', '什', '么', '多', '少'];\n    //console.log(stopWords);\n    if (!Array.prototype.forEach) {\n        Array.prototype.forEach = function (callback, thisArg) {\n            var T, k;\n            if (this === null) {\n                throw new TypeError(\" this is null or not defined\");\n            }\n            var O = Object(this);\n            var len = O.length >>> 0; // Hack to convert O.length to a UInt32 \n            if (({}).toString.call(callback) != \"[object Function]\") {\n                throw new TypeError(callback + \" is not a function\");\n            }\n            if (thisArg) {\n                T = thisArg;\n            }\n            k = 0;\n            while (k < len) {\n                var kValue;\n                if (k in O) {\n                    kValue = O[k];\n                    callback.call(T, kValue, k, O);\n                }\n                k++;\n            }\n        };\n    }\n\n    var terms = Object.create(null);\n    //console.log(text);\n    //把中文分开\n    var regexp = /[^\\u4E00-\\u9FFF\\u3400-\\u4DBF]+/g;\n    text = text.replace(regexp, '\\n');\n    //console.log(text);\n\n    stopWords.forEach(function (stopWord) {\n        if (!/^[\\u4E00-\\u9FFF\\u3400-\\u4DBF]+$/.test(stopWord)) return;\n        text = text.replace(new RegExp(stopWord, 'g'), 'a');\n    });\n    text = text.replace(/a+/g, '\\n');\n    //console.log(text);\n    var chunks = text.split(/\\n+/);\n    var pendingTerms = Object.create(null);\n    chunks.forEach(function processChunk(chunk) {\n        if (chunk.length <= 1) return;\n        var substrings = [];\n        //console.log(chunk);\n        substrings = getAllSubStrings(chunk, 5);\n        //console.log(substrings);\n        substrings.forEach(function (substr) {\n            if (substr.length <= 1) //不取单个字的词\n                return;\n            if (!(substr in pendingTerms)) pendingTerms[substr] = 0;\n            pendingTerms[substr]++;\n        });\n    });\n    for (var term in pendingTerms) {\n        if (!(term in terms)) terms[term] = 0;\n\n        terms[term] += pendingTerms[term];\n    }\n    pendingTerms = undefined;\n\n    for (term in terms) {\n        if (terms[term] < 0) continue;\n        if (idfArray[term]) {\n            terms[term] *= idfArray[term];\n        } else {}\n        list.push([term, terms[term]]);\n    }\n\n    list = list.sort(function (a, b) {\n        if (a[1] > b[1]) return -1;\n        if (a[1] < b[1]) return 1;\n        if (a[0] === b[0]) return 0;\n        var t = [a[0], b[0]].sort();\n        if (t[0] !== a[0]) return 1;\n        return -1;\n    });\n\n    for (var i = 0; i < list.length; i++) {\n        list2.push(list[i][0]);\n        list1.push(list[i][1]);\n    }\n\n    wordsOnly = list2;\n    valueOnly = list1;\n\n    return wordsOnly[0];\n}\n\n/**\r\n * 获得字符串的子串\r\n * @param  {string} str 需要处理的字符串\r\n * @param  {int} maxLength 一次处理的最长长度\r\n * @return {array} result 子串组成的数组 \r\n */\nfunction getAllSubStrings(str, maxLength) {\n    if (!str.length) return [];\n\n    var result = [];\n    var i = Math.min(str.length, maxLength);\n    do {\n        result.push(str.substr(0, i));\n    } while (--i);\n\n    if (str.length > 1) result = result.concat(getAllSubStrings(str.substr(1), maxLength)); // 迭代\n\n    return result;\n}\nexports.WeiboTextMap = WeiboTextMap;\nexports.Event3DMap = Event3DMap;\n\n},{}]},{},[1]);\n"],"file":"js/bundle.76129162.js","sourceRoot":"/source/"}